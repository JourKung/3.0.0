{"version":3,"sources":["webpack:///./src/redeem/RedeemDialog.js","webpack:///./src/firebase/index.js","webpack:///./src/redeem/index.js"],"names":["RedeemDialog","_ref","onClose","react_default","a","createElement","dist","Dialog","haveCloseButton","backdrop","title","buttons","text","onPress","open","closeOnEscape","RedeemDialog_RedeemDialogContent","index_cjs_default","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Object","assign","window","firebase","state","status","error","code","n","signIn","_callee","result","uid","document","data","regenerator_default","wrap","_context","prev","next","_this","setState","auth","signInWithPopup","GithubAuthProvider","sent","t0","catch","abrupt","user","providerData","firestore","collection","doc","get","t1","t2","stop","this","openEventPop","t","h","prototype","render","className","index_es","css","color","Preloader","kind","labelAlign","subtitle","indeterminate","Button","colorScheme","iconPositionRight","icon","angle_right_default","size","github_default","Component","renderDialog"],"mappings":"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","file":"redeem-6d6dfee94bf80bc99f02.js","sourcesContent":["import { Dialog, Button, Preloader } from 'reactackle'\nimport React from 'react'\nimport GitHubIcon from 'react-icons/lib/fa/github'\nimport ArrowForward from 'react-icons/lib/fa/angle-right'\n\nimport { firebase } from '../firebase'\n\nexport function RedeemDialog ({ onClose }) {\n  return (\n    <Dialog\n      haveCloseButton\n      backdrop\n      title=\"Redeem ticket\"\n      buttons={[{ text: 'Close', onPress: onClose }]}\n      open\n      closeOnEscape\n      onClose={onClose}\n    >\n      <RedeemDialogContent />\n    </Dialog>\n  )\n}\n\nclass RedeemDialogContent extends React.Component {\n  state = {\n    status: 'initial',\n    error: '',\n    code: '',\n  }\n\n  signIn = async () => {\n    this.setState({ status: 'signingIn' })\n    try {\n      let result\n      try {\n        result = await firebase.auth().signInWithPopup(new firebase.auth.GithubAuthProvider())\n      } catch (e) {\n        this.setState({ status: 'error', error: `Cannot sign in: ${e}` })\n        return\n      }\n      const uid = result.user.providerData[0].uid\n      let document\n      this.setState({ status: 'checking' })\n      try {\n        document = await firebase\n          .firestore()\n          .collection('github_users')\n          .doc(uid)\n          .get()\n      } catch (e) {\n        this.setState({ status: 'error', error: `Cannot check: ${e}` })\n        return\n      }\n      const data = document.data()\n      this.setState({ status: 'checked', code: data && data.code })\n    } catch (e) {\n      this.setState({ status: 'error', error: `Unknown error: ${e}` })\n    }\n  }\n\n  openEventPop = () => {\n    window.open('https://www.eventpop.me/e/3607-react-bangkok-3-0-0', '_blank')\n  }\n\n  render () {\n    if (this.state.status === 'error') {\n      return (\n        <div>\n          <p css={{ color: 'red' }}>\n            <strong>Error:</strong> {this.state.error}\n          </p>\n        </div>\n      )\n    }\n    if (this.state.status === 'signingIn') {\n      return <Preloader kind=\"linear\" labelAlign=\"center\" subtitle=\"Signing in...\" indeterminate />\n    }\n    if (this.state.status === 'checking') {\n      return (\n        <Preloader\n          kind=\"linear\"\n          labelAlign=\"center\"\n          subtitle=\"Looking for your ticket...\"\n          indeterminate\n        />\n      )\n    }\n    if (this.state.status === 'checked') {\n      if (!this.state.code) {\n        return (\n          <div>\n            <p>Sorry, we cannot find the ticket associated with your account...</p>\n          </div>\n        )\n      }\n      return (\n        <div>\n          <p>Congratulations! You receive a free ticket.</p>\n          <p>\n            Use the code <strong>{this.state.code}</strong> to redeem your free ticket.\n          </p>\n          <Button\n            text=\"Get your free ticket!\"\n            subtitle=\"Go to Event Pop\"\n            colorScheme=\"primary\"\n            iconPositionRight\n            icon={<ArrowForward />}\n            onPress={this.openEventPop}\n          />\n        </div>\n      )\n    }\n    return (\n      <div>\n        <p>To redeem your ticket, please first sign in with GitHub...</p>\n        <Button\n          text=\"Sign in with GitHub\"\n          colorScheme=\"primary\"\n          size=\"large\"\n          icon={<GitHubIcon />}\n          onPress={this.signIn}\n        />\n      </div>\n    )\n  }\n}\n","import firebase from 'firebase/app'\nimport 'firebase/auth'\nimport 'firebase/firestore'\n\nconst config = {\n  apiKey: 'AIzaSyCNk1PljsNsYRgvZ98_KYVqotkRojt24kk',\n  authDomain: 'reactbkk3.firebaseapp.com',\n  databaseURL: 'https://reactbkk3.firebaseio.com',\n  projectId: 'reactbkk3',\n  storageBucket: 'reactbkk3.appspot.com',\n  messagingSenderId: '666406395956',\n}\nfirebase.initializeApp(config)\n\n// For debugging.\nObject.assign(window, { firebase })\n\nexport { firebase }\n","import React from 'react'\nimport { RedeemDialog } from './RedeemDialog'\n\nexport function renderDialog ({ onClose }) {\n  return <RedeemDialog onClose={onClose} />\n}\n"],"sourceRoot":""}